// <auto-generated />
using System;
using HogwartsAPI.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HogwartsAPI.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250325033317_UpdateColumns")]
    partial class UpdateColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HogwartsAPI.Domain.House.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Animal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CommonRoom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Founder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ghost")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HouseColours")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("HogwartsAPI.Domain.House.HouseTrait", b =>
                {
                    b.Property<Guid>("HouseId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TraitId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.HasKey("HouseId", "TraitId");

                    b.HasIndex("TraitId");

                    b.ToTable("HouseTraits");
                });

            modelBuilder.Entity("HogwartsAPI.Domain.Trait.Trait", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Traits");
                });

            modelBuilder.Entity("HogwartsAPI.Domain.Wizard.Wizard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("HouseId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Wizards");
                });

            modelBuilder.Entity("HogwartsAPI.Domain.Wizard.WizardTrait", b =>
                {
                    b.Property<Guid>("WizardId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TraitId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.HasKey("WizardId", "TraitId");

                    b.HasIndex("TraitId");

                    b.ToTable("WizardTraits");
                });

            modelBuilder.Entity("HogwartsAPI.Domain.House.HouseTrait", b =>
                {
                    b.HasOne("HogwartsAPI.Domain.House.House", "House")
                        .WithMany("Traits")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HogwartsAPI.Domain.Trait.Trait", "Trait")
                        .WithMany()
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");

                    b.Navigation("Trait");
                });

            modelBuilder.Entity("HogwartsAPI.Domain.Wizard.Wizard", b =>
                {
                    b.HasOne("HogwartsAPI.Domain.House.House", null)
                        .WithMany("Students")
                        .HasForeignKey("HouseId");
                });

            modelBuilder.Entity("HogwartsAPI.Domain.Wizard.WizardTrait", b =>
                {
                    b.HasOne("HogwartsAPI.Domain.Trait.Trait", "Trait")
                        .WithMany()
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HogwartsAPI.Domain.Wizard.Wizard", "Wizard")
                        .WithMany("Traits")
                        .HasForeignKey("WizardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trait");

                    b.Navigation("Wizard");
                });

            modelBuilder.Entity("HogwartsAPI.Domain.House.House", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Traits");
                });

            modelBuilder.Entity("HogwartsAPI.Domain.Wizard.Wizard", b =>
                {
                    b.Navigation("Traits");
                });
#pragma warning restore 612, 618
        }
    }
}
